# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-22 19:52
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountingOauth2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessToken', models.CharField(max_length=1000, unique=True)),
                ('refreshToken', models.CharField(max_length=255, unique=True)),
                ('realmId', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CoA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gl_account_id', models.IntegerField()),
                ('gl_account_name', models.CharField(max_length=60, verbose_name='Account Name')),
                ('gl_account_type', models.CharField(max_length=60, verbose_name='Account Type')),
                ('gl_account_desc', models.CharField(blank=True, max_length=120, null=True, verbose_name='Account Description')),
                ('gl_detail_account_type', models.CharField(blank=True, max_length=120, null=True, verbose_name='Detail Account Type')),
                ('gl_account_bal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Account Balance')),
                ('gl_account_currency', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Account Currency')),
            ],
            options={
                'verbose_name': 'Chart of Accounts',
                'verbose_name_plural': 'Chart of Accounts',
                'db_table': 'coa',
            },
        ),
        migrations.CreateModel(
            name='CoAMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cust_account_id', models.IntegerField(blank=True, null=True)),
                ('cust_account_name', models.CharField(blank=True, max_length=60)),
                ('espresso_account_id', models.IntegerField()),
                ('espresso_account_name', models.CharField(blank=True, max_length=60)),
            ],
            options={
                'verbose_name': 'Chart of Accounts Map',
                'db_table': 'coamap',
            },
        ),
        migrations.CreateModel(
            name='DefaultAccountTagMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software', models.CharField(choices=[('Quickbooks', 'Quickbooks'), ('Zero', 'Zero'), ('Sage', 'Sage')], max_length=60)),
                ('account_category', models.CharField(max_length=60)),
                ('default_map_id', models.IntegerField()),
                ('default_map_name', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Account Tag Mapping',
                'db_table': 'defaultaccounttagmapping',
            },
        ),
        migrations.CreateModel(
            name='FinancialStatementEntryTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.IntegerField()),
                ('short_label', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=120)),
                ('tag_category', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Financial Statement Entry Tag',
                'db_table': 'financialstatementtag',
            },
        ),
        migrations.CreateModel(
            name='TrialBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gl_account_name', models.CharField(max_length=50)),
                ('debit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('credit', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'trialbalance',
            },
        ),
    ]
